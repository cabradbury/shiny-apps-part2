#
# About:
# dataPrep.R: Code to obtain and prepare the data prior to displaying
#             it in the shiny application.
#
# Get data, if it hasn't already been loaded.
if(file.exists("./data/Crime Stats.csv") == TRUE) {
crimeData <- read.csv("./data/Crime Stats.csv")
} else {
download.file("https://www.phoenix.gov/OpenDataFiles/Crime%20Stats.csv", "./data/Crime Stats.csv")
crimeData <- read.csv("./data/Crime Stats.csv")
}
# Clean and prepare data. Let's change some data types to make it
# easier to sort, plot and filter results.
crimeData$INC.NUMBER <- as.factor(crimeData$INC.NUMBER)
crimeData$OCCURRED.ON <- as.POSIXlt(crimeData$OCCURRED.ON, format = "%m/%d/%Y %H:%M")
crimeData$OCCURRED.TO <- as.POSIXlt(crimeData$OCCURRED.TO, format = "%m/%d/%Y %H:%M")
crimeData$UCR.CRIME.CATEGORY <- as.character(crimeData$UCR.CRIME.CATEGORY)
crimeData$X100.BLOCK.ADDR <- as.character(crimeData$X100.BLOCK.ADDR)
crimeData$ZIP <- as.factor(crimeData$ZIP)
crimeData$PREMISE.TYPE<- as.character(crimeData$PREMISE.TYPE)
# Save the data out to an RData file to preserve data types, etc..
save(crimeData, file="./data/CrimeStats.RData")
#
# Phoenix R Users Group
# June 23, 2017
#
# Shiny Application Development - Part II
# Example 3
#
# Author: Charles Bradbury
#
# About:
# dataPrep.R: Code to obtain and prepare the data prior to displaying
#             it in the shiny application.
#
# Get data, if it hasn't already been loaded.
if(file.exists("./data/Crime Stats.csv") == TRUE) {
crimeData <- read.csv("./data/Crime Stats.csv")
} else {
download.file("https://www.phoenix.gov/OpenDataFiles/Crime%20Stats.csv", "./data/Crime Stats.csv")
crimeData <- read.csv("./data/Crime Stats.csv")
}
# Clean and prepare data. Let's change some data types to make it
# easier to sort, plot and filter results.
crimeData$INC.NUMBER <- as.factor(crimeData$INC.NUMBER)
crimeData$OCCURRED.ON <- as.POSIXlt(crimeData$OCCURRED.ON, format = "%m/%d/%Y %H:%M")
crimeData$OCCURRED.TO <- as.POSIXlt(crimeData$OCCURRED.TO, format = "%m/%d/%Y %H:%M")
crimeData$UCR.CRIME.CATEGORY <- as.character(crimeData$UCR.CRIME.CATEGORY)
crimeData$X100.BLOCK.ADDR <- as.character(crimeData$X100.BLOCK.ADDR)
crimeData$ZIP <- as.factor(crimeData$ZIP)
crimeData$PREMISE.TYPE<- as.character(crimeData$PREMISE.TYPE)
# Save the data out to an RData file to preserve data types, etc..
save(crimeData, file="./data/CrimeStats.RData")
shiny::runApp()
runApp('Example_5')
runApp('Example_5')
runApp('Example_5')
runApp('Example_5')
runApp('Example_5')
runApp('Example_5')
install.packages("plotly")
runApp('Example_5')
runApp('Example_5')
runApp('Example_5')
runApp('Example_5')
runApp('Example_5')
runApp('Example_5')
runApp('Example_5')
runApp('Example_5')
runApp('Example_5')
runApp('Example_6')
runApp('Example_6')
runApp('Example_6')
runApp('Example_6')
runApp('Example_6')
runApp('Example_6')
runApp('Example_6')
runApp('Example_6')
runApp('Example_6')
runApp('Example_6')
runApp('Example_6')
runApp('Example_6')
runApp('Example_6')
runApp('Example_6')
runApp('Example_6')
runApp('Example_6')
runApp('Example_6')
runApp('Example_6')
runApp('Example_6')
runApp('Example_6')
runApp('Example_6')
runApp('Example_6')
runApp('Example_6')
runApp('Example_6')
runApp('Example_6')
runApp('Example_6')
runApp('Example_6')
runApp('Example_6')
runApp('Example_6')
runApp('Example_6')
setwd("~/Documents/R Users Group Presentations/Shiny Development - Part II/Example_6")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(plotly)
library(ggplot)
library(ggvis)
load("./data/CrimeStats.RData")
runApp()
View(crimeData)
setNames(aggregate(crimeDataRefined$INC.NUMBER~as.yearmon(crimeDataRefined$OCCURRED.ON), data=crimeDataRefined, FUN = length), c("Month", "Count"))
input$category <- "RAPE"
setNames(aggregate(crimeData$INC.NUMBER~as.yearmon(crimeData$OCCURRED.ON), data=crimeData, FUN = length), c("Month", "Count"))
crimeDataAggregate <- setNames(aggregate(crimeData$INC.NUMBER~as.yearmon(crimeData$OCCURRED.ON), data=crimeData, FUN = length), c("Month", "Count"))
p <- plot_ly(
x = crimeDataAggregate$Month,
y = crimeDataAggregate$Count,
name = "Crimes Per Month",
type = "bar"
)
p
runApp()
runApp()
library(plotly)
library(ggplot)
library(ggvis)
load("./data/CrimeStats.RData")
crimeDataAggregate <- setNames(aggregate(crimeData$INC.NUMBER~as.yearmon(crimeData$OCCURRED.ON), data=crimeData, FUN = length), c("Month", "Count"))
plot_ly(x = crimeDataAggregate$Month, y = crimeDataAggregate$Count, name = "Crimes Per Month", type = "bar")
runApp()
runApp()
# use the devtools package from CRAN to install choroplethrZip from github
install.packages("devtools")
library(devtools)
install_github('arilamstein/choroplethrZip@v1.3.0')
library(choroplethrZip)
data(df_pop_zip)
# ec = east coast
ec_states = c("maine", "new hampshire", "massachusetts", "rhode island", "connecticut",
"new york", "new jersey", "delaware", "maryland",
"virginia", "north carolina", "south carolina", "georgia", "florida",
"pennsylvania", "district of columbia", "vermont", "west virginia")
zip_choropleth(df_pop_zip,
state_zoom = ec_states,
title      = "2012 ZCTA Population Estimates",
legend     = "Population") + coord_map()
arizona = c("arizona")
zip_choropleth(df_pop_zip,
state_zoom = arizona,
title      = "2012 ZCTA Population Estimates",
legend     = "Population") + coord_map()
?zip_choropleth
runApp()
runApp()
runApp()
runApp()
?plot_ly
load("./data/CrimeStats.RData")
crimeDataAggregate <- setNames(aggregate(crimeData$INC.NUMBER~as.yearmon(crimeData$OCCURRED.ON), data=crimeData, FUN = length), c("Month", "Count"))
str(crimeDataAggregate)
crimeDataAggregate$Month
as.Date(crimeDataAggregate)
as.Date(crimeDataAggregate$Month)
as.Date(crimeDataAggregate$Month, "%YY-mm")
as.Date(crimeDataAggregate$Month, "%YY-%mm")
as.Date(crimeDataAggregate$Month, "%Y-%m")
as.Date(crimeDataAggregate$Month)
runApp()
View(crimeData)
crimeData2016 <- subset(crimData2016, year(crimeData$OCCURRED.ON) == "2016")
crimeData2016 <- subset(crimeData, year(crimeData$OCCURRED.ON) == "2016")
library(lubridate)
library(lubridate)
crimeData2016 <- subset(crimeData, year(crimeData$OCCURRED.ON) == "2016")
View(crimeData2016)
crimeData2017 <- subset(crimeData, year(crimeData$OCCURRED.ON) == "2017")
View(crimeData2017)
crimeDataAggregate2016 <- aggregate(crimeData2016$INC.NUMBER~crimeDataAggregate2016$ZIP, data = crimeData2016, FUN=length)
crimeDataAggregate2016 <- aggregate(crimeData2016$INC.NUMBER~crimeData2016$ZIP, data = crimeData2016, FUN=length)
View(crimeDataAggregate2016)
crimeDataAggregate2016 <- aggregate(crimeData2016$INC.NUMBER~crimeData2016$ZIP, data = crimeData2016, FUN=length)
crimeDataAggregate2017 <- aggregate(crimeData2017$INC.NUMBER~crimeData2017$ZIP, data = crimeData2017, FUN=length)
zip_choropleth(crimeDataAggregate2016,
state_zoom = arizona,
title      = "Cimes by Zip Code 2016",
legend     = "Total") + coord_map()
View(crimeDataAggregate)
View(crimeDataAggregate2017)
View(crimeDataAggregate2016)
View(df_pop_zip)
crimeDataAggregate2016 <- aggregate(crimeData2016$INC.NUMBER~crimeData2016$ZIP, data = crimeData2016, FUN=length)
names(crimeData2016)[1] <- "region"
names(crimeData2016)[2] <- "zip"
crimeDataAggregate2017 <- aggregate(crimeData2017$INC.NUMBER~crimeData2017$ZIP, data = crimeData2017, FUN=length)
names(crimeData2017)[1] <- "region"
names(crimeData2017)[2] <- "zip"
arizona = c("arizona")
zip_choropleth(crimeDataAggregate2016,
state_zoom = arizona,
title      = "Cimes by Zip Code 2016",
legend     = "Total") + coord_map()
View(crimeDataAggregate)
crimeDataAggregate2016 <- aggregate(crimeData2016$INC.NUMBER~crimeData2016$ZIP, data = crimeData2016, FUN=length)
names(crimeDataAggregate2016)[1] <- "region"
names(crimeDataAggregate2016)[2] <- "zip"
crimeDataAggregate2017 <- aggregate(crimeData2017$INC.NUMBER~crimeData2017$ZIP, data = crimeData2017, FUN=length)
names(crimeDataAggregate2017)[1] <- "region"
names(crimeDataAggregate2017)[2] <- "zip"
load("./data/CrimeStats.RData")
# Reduce to yearly data
crimeData2016 <- subset(crimeData, year(crimeData$OCCURRED.ON) == "2016")
crimeData2017 <- subset(crimeData, year(crimeData$OCCURRED.ON) == "2017")
# Now aggregate
crimeDataAggregate2016 <- aggregate(crimeData2016$INC.NUMBER~crimeData2016$ZIP, data = crimeData2016, FUN=length)
names(crimeDataAggregate2016)[1] <- "region"
names(crimeDataAggregate2016)[2] <- "zip"
crimeDataAggregate2017 <- aggregate(crimeData2017$INC.NUMBER~crimeData2017$ZIP, data = crimeData2017, FUN=length)
names(crimeDataAggregate2017)[1] <- "region"
names(crimeDataAggregate2017)[2] <- "zip"
arizona = c("arizona")
zip_choropleth(crimeDataAggregate2016,
state_zoom = arizona,
title      = "Cimes by Zip Code 2016",
legend     = "Total") + coord_map()
View(crimeDataAggregate2016)
View(df_pop_zip)
load("./data/CrimeStats.RData")
# Reduce to yearly data
crimeData2016 <- subset(crimeData, year(crimeData$OCCURRED.ON) == "2016")
crimeData2017 <- subset(crimeData, year(crimeData$OCCURRED.ON) == "2017")
# Now aggregate
crimeDataAggregate2016 <- aggregate(crimeData2016$INC.NUMBER~crimeData2016$ZIP, data = crimeData2016, FUN=length)
names(crimeDataAggregate2016)[1] <- "region"
names(crimeDataAggregate2016)[2] <- "value"
crimeDataAggregate2017 <- aggregate(crimeData2017$INC.NUMBER~crimeData2017$ZIP, data = crimeData2017, FUN=length)
names(crimeDataAggregate2017)[1] <- "region"
names(crimeDataAggregate2017)[2] <- "value"
# ec = east coast
arizona = c("arizona")
zip_choropleth(crimeDataAggregate2016,
state_zoom = arizona,
title      = "Cimes by Zip Code 2016",
legend     = "Total") + coord_map()
?zip_choropleth
zip_choropleth(crimeDataAggregate2016,
state_zoom = arizona,
title      = "Cimes by Zip Code 2016",
zip_zoom = crimeData$ZIP
legend     = "Total") + coord_map()
zip_choropleth(crimeDataAggregate2016,
state_zoom = arizona,
title      = "Cimes by Zip Code 2016",
zip_zoom = crimeData$ZIP,
legend     = "Total") + coord_map()
zip_choropleth(crimeDataAggregate2016,
state_zoom = arizona,
title      = "Cimes by Zip Code 2016",
county_zoom = crimeData$ZIP,
legend     = "Total") + coord_map()
zip_choropleth(crimeDataAggregate2016,
state_zoom = arizona,
title      = "Cimes by Zip Code 2016",
county_zoom = crimeDataAggregate2016$region,
legend     = "Total") + coord_map()
?zip.regions
zip_choropleth(crimeDataAggregate2017,
state_zoom = arizona,
title      = "Cimes by Zip Code 2016",
county_zoom = crimeDataAggregate2017$region,
legend     = "Total") + coord_map()
zip_choropleth(crimeDataAggregate2017,
state_zoom = arizona,
title      = "Cimes by Zip Code 2016",
zip_zoop = vector(crimeDataAggregate2017$region),
legend     = "Total") + coord_map()
zip_choropleth(crimeDataAggregate2017,
state_zoom = arizona,
title      = "Cimes by Zip Code 2016",
zip_zoom = vector(crimeDataAggregate2017$region),
legend     = "Total") + coord_map()
zip_choropleth(crimeDataAggregate2017,
state_zoom = arizona,
title      = "Cimes by Zip Code 2016",
zip_zoom = as.vector(crimeDataAggregate2017$region),
legend     = "Total") + coord_map()
zip_choropleth(crimeDataAggregate2016,
state_zoom = arizona,
title      = "Cimes by Zip Code 2016",
zip_zoom = as.vector(crimeDataAggregate2016$region),
legend     = "Total") + coord_map()
arizona = c("arizona")
az_fips = c(85001, 85002, 85003, 85004, 85005, 85006, 85007, 85008, 85009, 85010, 85011, 85012, 85013, 85014, 85015, 85016, 85017, 85018, 85019, 85020, 85021, 85022, 85023, 85024, 85025, 85026, 85027, 85028, 85029, 85030, 85031, 85032, 85033, 85034, 85035, 85036, 85037, 85038, 85039, 85040, 85043, 85044, 85045, 85048, 85050, 85053, 85054, 85060, 85061, 85062, 85063, 85064, 85065, 85066, 85067, 85068, 85069, 85070, 85071, 85072, 85073, 85074, 85075, 85076, 85077, 85078, 85079, 85082, 85085, 85098, 85099)
zip_choropleth(crimeDataAggregate2016,
state_zoom = arizona,
title      = "Cimes by Zip Code 2016",
county_zoom = az_fips,
legend     = "Total") + coord_map()
runApp()
arizona = c("arizona")
az_fips = c(85001, 85002, 85003, 85004, 85005, 85006, 85007, 85008, 85009, 85010, 85011, 85012, 85013, 85014, 85015, 85016, 85017, 85018, 85019, 85020, 85021, 85022, 85023, 85024, 85025, 85026, 85027, 85028, 85029, 85030, 85031, 85032, 85033, 85034, 85035, 85036, 85037, 85038, 85039, 85040, 85043, 85044, 85045, 85048, 85050, 85053, 85054, 85060, 85061, 85062, 85063, 85064, 85065, 85066, 85067, 85068, 85069, 85070, 85071, 85072, 85073, 85074, 85075, 85076, 85077, 85078, 85079, 85082, 85085, 85098, 85099, 85290)
zip_choropleth(crimeDataAggregate2016,
state_zoom = arizona,
title      = "Cimes by Zip Code 2016",
county_zoom = az_fips,
legend     = "Total") + coord_map()
data("zip.regions")
View(zip.regions)
crimeData$ZIP[crimeData$ZIP=="85290"] <- "85215"
# Reduce to yearly data
crimeData2016 <- subset(crimeData, year(crimeData$OCCURRED.ON) == "2016")
crimeData2017 <- subset(crimeData, year(crimeData$OCCURRED.ON) == "2017")
# Now aggregate
crimeDataAggregate2016 <- aggregate(crimeData2016$INC.NUMBER~crimeData2016$ZIP, data = crimeData2016, FUN=length)
names(crimeDataAggregate2016)[1] <- "region"
names(crimeDataAggregate2016)[2] <- "value"
crimeDataAggregate2017 <- aggregate(crimeData2017$INC.NUMBER~crimeData2017$ZIP, data = crimeData2017, FUN=length)
names(crimeDataAggregate2017)[1] <- "region"
names(crimeDataAggregate2017)[2] <- "value"
data(df_pop_zip)
arizona = c("arizona")
az_fips = c(85001, 85002, 85003, 85004, 85005, 85006, 85007, 85008, 85009, 85010, 85011, 85012, 85013, 85014, 85015, 85016, 85017, 85018, 85019, 85020, 85021, 85022, 85023, 85024, 85025, 85026, 85027, 85028, 85029, 85030, 85031, 85032, 85033, 85034, 85035, 85036, 85037, 85038, 85039, 85040, 85043, 85044, 85045, 85048, 85050, 85053, 85054, 85060, 85061, 85062, 85063, 85064, 85065, 85066, 85067, 85068, 85069, 85070, 85071, 85072, 85073, 85074, 85075, 85076, 85077, 85078, 85079, 85082, 85085, 85098, 85099, 85290)
zip_choropleth(crimeDataAggregate2016,
state_zoom = arizona,
title      = "Cimes by Zip Code 2016",
county_zoom = az_fips,
legend     = "Total") + coord_map()
# ec = east coast
arizona = c("arizona")
az_fips = c(85001, 85002, 85003, 85004, 85005, 85006, 85007, 85008, 85009, 85010, 85011, 85012, 85013, 85014, 85015, 85016, 85017, 85018, 85019, 85020, 85021, 85022, 85023, 85024, 85025, 85026, 85027, 85028, 85029, 85030, 85031, 85032, 85033, 85034, 85035, 85036, 85037, 85038, 85039, 85040, 85043, 85044, 85045, 85048, 85050, 85053, 85054, 85060, 85061, 85062, 85063, 85064, 85065, 85066, 85067, 85068, 85069, 85070, 85071, 85072, 85073, 85074, 85075, 85076, 85077, 85078, 85079, 85082, 85085, 85098, 85099)
zip_choropleth(crimeDataAggregate2016,
state_zoom = arizona,
title      = "Cimes by Zip Code 2016",
county_zoom = az_fips,
legend     = "Total") + coord_map()
arizona = c("arizona")
az_fips = c(85001, 85002, 85003, 85004, 85005, 85006, 85007, 85008, 85009, 85010, 85011, 85012, 85013, 85014, 85015, 85016, 85017, 85018, 85019, 85020, 85021, 85022, 85023, 85024, 85025, 85026, 85027, 85028, 85029, 85030, 85031, 85032, 85033, 85034, 85035, 85036, 85037, 85038, 85039, 85040, 85043, 85044, 85045, 85048, 85050, 85053, 85054, 85060, 85061, 85062, 85063, 85064, 85065, 85066, 85067, 85068, 85069, 85070, 85071, 85072, 85073, 85074, 85075, 85076, 85077, 85078, 85079, 85082, 85085, 85098, 85099)
zip_choropleth(crimeDataAggregate2016,
state_zoom = arizona,
title      = "Crimes by Zip Code 2016",
county_zoom = as.vector(crimeData2016$ZIP),
legend     = "Total") + coord_map()
arizona = c("arizona")
az_fips = c(85001, 85002, 85003, 85004, 85005, 85006, 85007, 85008, 85009, 85010, 85011, 85012, 85013, 85014, 85015, 85016, 85017, 85018, 85019, 85020, 85021, 85022, 85023, 85024, 85025, 85026, 85027, 85028, 85029, 85030, 85031, 85032, 85033, 85034, 85035, 85036, 85037, 85038, 85039, 85040, 85043, 85044, 85045, 85048, 85050, 85053, 85054, 85060, 85061, 85062, 85063, 85064, 85065, 85066, 85067, 85068, 85069, 85070, 85071, 85072, 85073, 85074, 85075, 85076, 85077, 85078, 85079, 85082, 85085, 85098, 85099)
zip_choropleth(crimeDataAggregate2016,
state_zoom = arizona,
title      = "Crimes by Zip Code 2016",
county_zoom = as.vector(crimeData$ZIP),
legend     = "Total") + coord_map()
arizona = c("arizona")
az_fips = c(85001, 85002, 85003, 85004, 85005, 85006, 85007, 85008, 85009, 85010, 85011, 85012, 85013, 85014, 85015, 85016, 85017, 85018, 85019, 85020, 85021, 85022, 85023, 85024, 85025, 85026, 85027, 85028, 85029, 85030, 85031, 85032, 85033, 85034, 85035, 85036, 85037, 85038, 85039, 85040, 85043, 85044, 85045, 85048, 85050, 85053, 85054, 85060, 85061, 85062, 85063, 85064, 85065, 85066, 85067, 85068, 85069, 85070, 85071, 85072, 85073, 85074, 85075, 85076, 85077, 85078, 85079, 85082, 85085, 85098, 85099)
zip_choropleth(crimeDataAggregate2016,
state_zoom = arizona,
title      = "Crimes by Zip Code 2016",
zip_zoom = as.vector(crimeData$ZIP),
legend     = "Total") + coord_map()
arizona = c("arizona")
az_fips = c(85001, 85002, 85003, 85004, 85005, 85006, 85007, 85008, 85009, 85010, 85011, 85012, 85013, 85014, 85015, 85016, 85017, 85018, 85019, 85020, 85021, 85022, 85023, 85024, 85025, 85026, 85027, 85028, 85029, 85030, 85031, 85032, 85033, 85034, 85035, 85036, 85037, 85038, 85039, 85040, 85043, 85044, 85045, 85048, 85050, 85053, 85054, 85060, 85061, 85062, 85063, 85064, 85065, 85066, 85067, 85068, 85069, 85070, 85071, 85072, 85073, 85074, 85075, 85076, 85077, 85078, 85079, 85082, 85085, 85098, 85099)
zip_choropleth(crimeDataAggregate2016,
state_zoom = arizona,
title      = "Crimes by Zip Code 2016",
zip_zoom = as.vector(unique(crimeData$ZIP)),
legend     = "Total") + coord_map()
as.vector(unique(crimeData$ZIP))
runApp()
arizona = c("arizona")
zip_choropleth(crimeDataAggregate2017,
state_zoom = arizona,
title      = "Crimes by Zip Code 2017",
zip_zoom = as.vector(unique(crimeData$ZIP)),
legend     = "Total") + coord_map()
View(crimeDataAggregate)
# Now aggregate
crimeDataAggregate2016 <- aggregate(crimeData2016$INC.NUMBER~crimeData2016$ZIP, data = crimeData2016, FUN=length)
crimeDataAggregate2017 <- aggregate(crimeData2017$INC.NUMBER~crimeData2017$ZIP, data = crimeData2017, FUN=length)
names(crimeDataAggregate2016)[1] <- "region"
names(crimeDataAggregate2016)[2] <- "value"
names(crimeDataAggregate2017)[1] <- "region"
names(crimeDataAggregate2017)[2] <- "value"
arizona = c("arizona")
zip_choropleth(crimeDataAggregate2017,
state_zoom = arizona,
title      = "Crimes by Zip Code 2017",
zip_zoom = as.vector(unique(crimeDataAggregate2017$ZIP)),
legend     = "Total") + coord_map()
library(ggplot2)
qmap('houston', zoom = 13)
?qmap
library(ggplot2)
library(ggmap)
qmap('houston', zoom = 13)
install.packages(c("ggmap", "ggplot"))
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages(c("backports", "bayesplot", "boot", "caret", "curl", "foreign", "formatR", "gdata", "jsonlite", "knitr", "lme4", "mapproj", "maps", "markdown", "MASS", "Matrix", "memoise", "quantmod", "quantreg", "RcppEigen", "rmarkdown", "rpart", "rpart.plot", "rsconnect", "RSQLite", "rstan", "RWeka", "shiny", "shinydashboard", "SparseM", "StanHeaders", "tidyr", "XLConnect", "XLConnectJars", "XML", "zoo"))
library(ggplot2)
library(ggmap)
qmap('houston', zoom = 13)
qmap('phoenix', zoom = 1)
install.packages("choroplethr")
library(choroplethr)
data(df_pop_county)
county_choropleth(df_pop_county,
title      = "2012 California County Population Estimates",
legend     = "Population",
state_zoom = "california")
install.packages("choroplethrMaps")
library(choroplethr)
library(choroplethrMaps)
data(df_pop_county)
county_choropleth(df_pop_county,
title      = "2012 California County Population Estimates",
legend     = "Population",
state_zoom = "california")
county_choropleth(df_pop_county,
title         = "2012 California County Population Estimates",
legend        = "Population",
state_zoom    = "california",
reference_map = TRUE)
county_choropleth(df_pop_county,
title      = "2012 California County Population Estimates",
legend     = "Population",
state_zoom = "arizona")
?choroplethr
?county_choropleth
library(dplyr)
library(choroplethrMaps)
data(county.regions)
# show the population of the 5 counties (boroughs) that make up New York City
nyc_county_names = c("kings", "bronx", "new york", "queens", "richmond")
nyc_county_fips = county.regions %>%
filter(state.name == "new york" & county.name %in% nyc_county_names) %>%
select(region)
county_choropleth(df_pop_county,
title        = "Population of Counties in New York City",
legend       = "Population",
num_colors   = 1,
county_zoom = nyc_county_fips$region)
# show the population of the 5 counties (boroughs) that make up New York City
az_county_names = c("maricopa")
az_county_fips = county.regions %>%
filter(state.name == "arizona" & county.name %in% az_county_names) %>%
select(region)
county_choropleth(df_pop_county,
title        = "Population of Counties in New York City",
legend       = "Population",
num_colors   = 1,
county_zoom = az_county_fips$region)
az_county_names = c("maricopa")
az_county_fips = county.regions %>%
filter(state.name == "arizona" & county.name %in% az_county_names) %>%
select(region)
county_choropleth(crimeDataAggregate2016,
title        = "Population of Counties in New York City",
legend       = "Population",
num_colors   = 1,
county_zoom = az_county_fips$region)
# show the population of the 5 counties (boroughs) that make up New York City
az_county_names = c("maricopa", "pinal", "pima")
az_county_fips = county.regions %>%
filter(state.name == "arizona" & county.name %in% az_county_names) %>%
select(region)
county_choropleth(crimeDataAggregate2016,
title        = "Population of Counties in New York City",
legend       = "Population",
num_colors   = 1,
county_zoom = az_county_fips$region)
map("world", "China")
map.cities(country = "China", capitals = 2)
map("state", "New Jersey")
data(us.cities)
map.cities(us.cities, country="NJ")
install.packages(c("mapproj", "ggmap", "DeducerSpatial"))
require(maps)
require(ggmap)
require(ggplot2)
par(mfrow = c(2, 1))
map("usa")
par(mfrow = c(2, 1))
map("usa")
par(mfrow = c(2, 1))
map("usa")
par(mfrow = c(2, 1))
map("usa")
qmap('houston', zoom = 14,color = 'bw', legend = 'topleft')
load("./data/CrimeStats.RData")
View(crimeData)
crimeData$OCCURRED.ON
tail(crimeData$OCCURRED.ON)
shiny::runApp()
runApp()
install.packages(c("plotly", "shinydashboard"))
